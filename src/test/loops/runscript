#!/bin/sh

# This runs most of the test programs with default settings except for
# the supplied TRIALS, which controls the max number of threads
# and/or test iterations in most programs.

# Written by Doug Lea with assistance from members of JCP JSR-166
# Expert Group and released to the public domain, as explained at
# http://creativecommons.org/licenses/publicdomain

# Set env variable RUNJAVA to java executable. Otherwise uses "java"
RUN="java"
if [ -n "$RUNJAVA" ]; then
  RUN=$RUNJAVA
fi

TRIALS=8
if [ $# != "0" ]; then
  TRIALS=$1
fi

echo "Java is " $RUN
echo "Trials per test: "  $TRIALS

echo SimpleReentrantLockLoops
$RUN SimpleReentrantLockLoops $TRIALS
echo SimpleMutexLoops
$RUN SimpleMutexLoops $TRIALS
echo SimpleSemaphoreLoops
$RUN SimpleSemaphoreLoops $TRIALS
echo SimpleLockLoops
$RUN SimpleLockLoops $TRIALS
echo SimpleWriteLockLoops
$RUN SimpleWriteLockLoops $TRIALS
echo SimpleTimedLockLoops
$RUN SimpleTimedLockLoops $TRIALS
echo SimpleSpinLockLoops
$RUN SimpleSpinLockLoops 8  # $TRIALS
echo TimeoutLockLoops
$RUN TimeoutLockLoops $TRIALS
echo CheckedLockLoops
$RUN CheckedLockLoops $TRIALS
echo UncheckedLockLoops
$RUN UncheckedLockLoops $TRIALS
echo CancelledLockLoops
$RUN CancelledLockLoops $TRIALS
echo LockOncePerThreadLoops
$RUN LockOncePerThreadLoops 5 #$TRIALS
echo ProducerConsumerLoops
$RUN ProducerConsumerLoops $TRIALS
echo MultipleProducersSingleConsumerLoops
$RUN MultipleProducersSingleConsumerLoops $TRIALS
echo SingleProducerMultipleConsumerLoops
$RUN SingleProducerMultipleConsumerLoops $TRIALS
echo CancelledProducerConsumerLoops
$RUN CancelledProducerConsumerLoops $TRIALS
echo TimeoutProducerConsumerLoops
$RUN TimeoutProducerConsumerLoops $TRIALS
echo ExecutorCompletionServiceLoops
$RUN ExecutorCompletionServiceLoops $TRIALS
echo ConcurrentQueueLoops
$RUN ConcurrentQueueLoops java.util.concurrent.ConcurrentLinkedQueue $TRIALS
echo ConcurrentDequeLoops
$RUN ConcurrentDequeLoops java.util.concurrent.LinkedBlockingDeque $TRIALS
echo DequeBash ArrayDeque
$RUN DequeBash java.util.ArrayDeque $TRIALS
echo DequeBash LinkedList
$RUN DequeBash java.util.LinkedList $TRIALS
echo DequeBash LinkedBlockingdeque
$RUN DequeBash java.util.concurrent.LinkedBlockingDeque $TRIALS
echo ExchangeLoops
$RUN ExchangeLoops $TRIALS
echo CancelledFutureLoops
$RUN CancelledFutureLoops $TRIALS
echo MapCheck ConcurrentHashMap
$RUN MapCheck java.util.concurrent.ConcurrentHashMap $TRIALS
echo IntMapCheck ConcurrenHhashMap
$RUN IntMapCheck java.util.concurrent.ConcurrentHashMap $TRIALS
echo IntMapCheck ConcurrentSkipListMap
$RUN IntMapCheck java.util.concurrent.ConcurrentSkipListMap $TRIALS
echo NavigableMapCheck TreeMap
$RUN NavigableMapCheck java.util.TreeMap $TRIALS
echo NavigableMapCheck ConcurrentSkipListMap
$RUN NavigableMapCheck java.util.concurrent.ConcurrentSkipListMap $TRIALS
echo NavigableSetCheck TreeSet
$RUN NavigableSetCheck java.util.TreeSet $TRIALS
echo SetBash ConcurrentSkipListSet
$RUN SetBash java.util.concurrent.ConcurrentSkipListSet $TRIALS 100
echo NavigableSetCheck ConcurrentSkipListSet
$RUN NavigableSetCheck java.util.concurrent.ConcurrentSkipListSet $TRIALS
echo MapLoops ConcurrentHashMap
$RUN MapLoops java.util.concurrent.ConcurrentHashMap $TRIALS
echo MapLoops ConcurrentSkipListMap
$RUN MapLoops java.util.concurrent.ConcurrentSkipListMap $TRIALS
echo MapLoops RWTreeMap
$RUN MapLoops RWMap $TRIALS
echo MapWordLoops ConcurrentHashMap
$RUN MapWordLoops java.util.concurrent.ConcurrentHashMap $TRIALS
echo MapWordLoops java.util.TreeMap
$RUN MapWordLoops java.util.TreeMap $TRIALS
echo MapWordLoops RWTreeMap
$RUN MapWordLoops RWMap $TRIALS
echo MapWordLoops ConcurrentSkipListMap
$RUN MapWordLoops java.util.concurrent.ConcurrentSkipListMap $TRIALS
echo TimeUnitLoops
$RUN TimeUnitLoops
echo ReadHoldingWriteLock
$RUN ReadHoldingWriteLock
echo Finals
$RUN Finals
echo FinalLongTest
$RUN FinalLongTest
echo RLJBar
$RUN RLJBar 
echo RLJBar -b 
$RUN RLJBar -b 
echo RLIBar
$RUN RLIBar -np $TRIALS
echo RLIBar -batch 10 
$RUN RLIBar -batch 10 -np $TRIALS
